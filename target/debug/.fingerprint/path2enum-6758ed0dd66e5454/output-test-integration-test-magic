{"$message_type":"diagnostic","message":"no variant or associated item named `ArrowLeftSvg` found for enum `PublicPaths` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"tests/magic.rs","byte_start":234,"byte_end":246,"line_start":12,"line_end":12,"column_start":29,"column_end":41,"is_primary":true,"text":[{"text":"    assert_eq!(PublicPaths::ArrowLeftSvg.to_str(), \"arrow-left.svg\");","highlight_start":29,"highlight_end":41}],"label":"variant or associated item not found in `PublicPaths`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":"variant or associated item `ArrowLeftSvg` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[magic]","def_site_span":{"file_name":"/home/pas/Sources/crates/path2enum/src/lib.rs","byte_start":242,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"pub fn magic(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `ArrowLeftSvg` found for enum `PublicPaths` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/magic.rs:12:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `ArrowLeftSvg` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    assert_eq!(PublicPaths::ArrowLeftSvg.to_str(), \"arrow-left.svg\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `PublicPaths`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `NestedDirノIconSvg` found for enum `PublicPaths` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"tests/magic.rs","byte_start":313,"byte_end":332,"line_start":14,"line_end":14,"column_start":22,"column_end":39,"is_primary":true,"text":[{"text":"        PublicPaths::NestedDirノIconSvg.to_str(),","highlight_start":22,"highlight_end":39}],"label":"variant or associated item not found in `PublicPaths`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":"variant or associated item `NestedDirノIconSvg` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[magic]","def_site_span":{"file_name":"/home/pas/Sources/crates/path2enum/src/lib.rs","byte_start":242,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"pub fn magic(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `NestedDirノIconSvg` found for enum `PublicPaths` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/magic.rs:14:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `NestedDirノIconSvg` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        PublicPaths::NestedDirノIconSvg.to_str(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `PublicPaths`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `NestedDirノDeepDirノDeepIconSvg` found for enum `PublicPaths` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"tests/magic.rs","byte_start":417,"byte_end":450,"line_start":18,"line_end":18,"column_start":22,"column_end":51,"is_primary":true,"text":[{"text":"        PublicPaths::NestedDirノDeepDirノDeepIconSvg.to_str(),","highlight_start":22,"highlight_end":51}],"label":"variant or associated item not found in `PublicPaths`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":"variant or associated item `NestedDirノDeepDirノDeepIconSvg` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[magic]","def_site_span":{"file_name":"/home/pas/Sources/crates/path2enum/src/lib.rs","byte_start":242,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"pub fn magic(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `NestedDirノDeepDirノDeepIconSvg` found for enum `PublicPaths` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/magic.rs:18:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `NestedDirノDeepDirノDeepIconSvg` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        PublicPaths::NestedDirノDeepDirノDeepIconSvg.to_str(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `PublicPaths`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `DebugノDebuggerノCargoToml` found for enum `ProjectPaths` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"tests/magic.rs","byte_start":653,"byte_end":681,"line_start":31,"line_end":31,"column_start":23,"column_end":47,"is_primary":true,"text":[{"text":"        ProjectPaths::DebugノDebuggerノCargoToml.to_str(),","highlight_start":23,"highlight_end":47}],"label":"variant or associated item not found in `ProjectPaths`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tests/magic.rs","byte_start":515,"byte_end":537,"line_start":23,"line_end":23,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"#[magic(ext = \"toml\")]","highlight_start":1,"highlight_end":23}],"label":"variant or associated item `DebugノDebuggerノCargoToml` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests/magic.rs","byte_start":515,"byte_end":537,"line_start":23,"line_end":23,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"#[magic(ext = \"toml\")]","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[magic]","def_site_span":{"file_name":"/home/pas/Sources/crates/path2enum/src/lib.rs","byte_start":242,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"pub fn magic(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `DebugノDebuggerノCargoToml` found for enum `ProjectPaths` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/magic.rs:31:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[magic(ext = \"toml\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `DebugノDebuggerノCargoToml` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ProjectPaths::DebugノDebuggerノCargoToml.to_str(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ProjectPaths`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `ClientノLeptosUiノCargoToml` found for enum `ProjectPaths` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"tests/magic.rs","byte_start":773,"byte_end":802,"line_start":35,"line_end":35,"column_start":23,"column_end":48,"is_primary":true,"text":[{"text":"        ProjectPaths::ClientノLeptosUiノCargoToml.to_str(),","highlight_start":23,"highlight_end":48}],"label":"variant or associated item not found in `ProjectPaths`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tests/magic.rs","byte_start":515,"byte_end":537,"line_start":23,"line_end":23,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"#[magic(ext = \"toml\")]","highlight_start":1,"highlight_end":23}],"label":"variant or associated item `ClientノLeptosUiノCargoToml` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests/magic.rs","byte_start":515,"byte_end":537,"line_start":23,"line_end":23,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"#[magic(ext = \"toml\")]","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[magic]","def_site_span":{"file_name":"/home/pas/Sources/crates/path2enum/src/lib.rs","byte_start":242,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"pub fn magic(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no variant or associated item named `ClientノLeptosUiノCargoToml` found for enum `ProjectPaths` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/magic.rs:35:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[magic(ext = \"toml\")]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariant or associated item `ClientノLeptosUiノCargoToml` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ProjectPaths::ClientノLeptosUiノCargoToml.to_str(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `ProjectPaths`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"non-exhaustive patterns: type `&PublicPaths` is non-empty","code":{"code":"E0004","explanation":"This error indicates that the compiler cannot guarantee a matching pattern for\none or more possible inputs to a match expression. Guaranteed matches are\nrequired in order to assign values to match expressions, or alternatively,\ndetermine the flow of execution.\n\nErroneous code example:\n\n```compile_fail,E0004\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x { // error: non-exhaustive patterns: `HastaLaVistaBaby` not covered\n    Terminator::TalkToMyHand => {}\n}\n```\n\nIf you encounter this error you must alter your patterns so that every possible\nvalue of the input type is matched. For types with a small number of variants\n(like enums) you should probably cover all cases explicitly. Alternatively, the\nunderscore `_` wildcard pattern can be added after all other patterns to match\n\"anything else\". Example:\n\n```\nenum Terminator {\n    HastaLaVistaBaby,\n    TalkToMyHand,\n}\n\nlet x = Terminator::HastaLaVistaBaby;\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    Terminator::HastaLaVistaBaby => {}\n}\n\n// or:\n\nmatch x {\n    Terminator::TalkToMyHand => {}\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[magic]","def_site_span":{"file_name":"/home/pas/Sources/crates/path2enum/src/lib.rs","byte_start":242,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"pub fn magic(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`PublicPaths` defined here","code":null,"level":"note","spans":[{"file_name":"tests/magic.rs","byte_start":129,"byte_end":140,"line_start":6,"line_end":6,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub enum PublicPaths {}","highlight_start":10,"highlight_end":21}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the matched value is of type `&PublicPaths`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"references are always considered inhabited","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown","code":null,"level":"help","spans":[{"file_name":"tests/magic.rs","byte_start":119,"byte_end":119,"line_start":5,"line_end":5,"column_start":60,"column_end":60,"is_primary":true,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":60,"highlight_end":60}],"label":null,"suggested_replacement":" {\n    _ => todo!(),\n}","suggestion_applicability":"HasPlaceholders","expansion":{"span":{"file_name":"tests/magic.rs","byte_start":60,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":60,"is_primary":false,"text":[{"text":"#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[magic]","def_site_span":{"file_name":"/home/pas/Sources/crates/path2enum/src/lib.rs","byte_start":242,"byte_end":307,"line_start":11,"line_end":11,"column_start":1,"column_end":66,"is_primary":false,"text":[{"text":"pub fn magic(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0004]\u001b[0m\u001b[0m\u001b[1m: non-exhaustive patterns: type `&PublicPaths` is non-empty\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/magic.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PublicPaths` defined here\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/magic.rs:6:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum PublicPaths {}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the matched value is of type `&PublicPaths`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: references are always considered inhabited\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `magic` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m#[magic(path = \"path2enum/tests/assets\", ext = \"svg,toml\")]\u001b[0m\u001b[0m\u001b[38;5;10m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     _ => todo!(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 6 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0004, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0004, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0004`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0004`.\u001b[0m\n"}
